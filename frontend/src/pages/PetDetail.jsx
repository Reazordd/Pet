import React, { useState, useEffect } from "react";
import { useParams, Link, useNavigate } from "react-router-dom";
import { toast } from "react-toastify";
import api from "../utils/api";
import { checkToken } from "../utils/auth";
import Skeleton from "react-loading-skeleton";
import "react-loading-skeleton/dist/skeleton.css";
import "../styles/PetDetail.css";

function PetDetail() {
  const { id } = useParams();
  const navigate = useNavigate();
  const [pet, setPet] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState("");
  const isAuthenticated = checkToken();

  useEffect(() => {
    fetchPet();
  }, [id]);

  const fetchPet = async () => {
    try {
      setLoading(true);
      const response = await api.get(`/pets/${id}/`);
      setPet(response.data);
    } catch {
      setError("–û–±—ä—è–≤–ª–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ");
      toast.error("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ");
    } finally {
      setLoading(false);
    }
  };

  const handleContact = () => {
    if (!isAuthenticated) {
      toast.info("–í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É, —á—Ç–æ–±—ã —Å–≤—è–∑–∞—Ç—å—Å—è —Å –ø—Ä–æ–¥–∞–≤—Ü–æ–º");
      navigate("/login");
      return;
    }

    if (pet.user_phone) {
      window.open(`tel:${pet.user_phone}`, "_blank");
    } else if (pet.user_email) {
      window.open(`mailto:${pet.user_email}`, "_blank");
    } else {
      toast.info("–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ —É–∫–∞–∑–∞–Ω–∞");
    }
  };

  const formatPrice = (price) => {
    if (!price) return "–¶–µ–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞";
    return new Intl.NumberFormat("ru-RU", {
      style: "currency",
      currency: "RUB",
      maximumFractionDigits: 0,
    }).format(price);
  };

  if (error) {
    return (
      <div className="pet-detail-container">
        <div className="error-state">
          <h2>{error}</h2>
          <Link to="/" className="btn btn-primary">
            ‚Üê –ù–∞ –≥–ª–∞–≤–Ω—É—é
          </Link>
        </div>
      </div>
    );
  }

  if (loading || !pet) {
    return (
      <div className="pet-detail-container">
        <div className="pet-detail-card">
          <div className="pet-image-skeleton">
            <Skeleton height={400} />
          </div>
          <div className="pet-info">
            <Skeleton height={40} width={200} />
            <Skeleton count={6} />
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className="pet-detail-container">
      <div className="pet-detail-card">
        {/* –§–æ—Ç–æ –ø–∏—Ç–æ–º—Ü–∞ */}
        <div className="pet-image">
          {pet.photo ? (
            <img
              src={pet.photo}
              alt={pet.name}
              onError={(e) => (e.target.src = "/images/default-pet.jpg")}
            />
          ) : (
            <div className="no-image">
              <span>üêæ</span>
              <p>–§–æ—Ç–æ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ</p>
            </div>
          )}
        </div>

        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        <div className="pet-info">
          <h1 className="pet-title">{pet.name}</h1>

          <div className="pet-meta">
            <span>{pet.breed || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}</span>
            <span>{pet.age || "–í–æ–∑—Ä–∞—Å—Ç –Ω–µ —É–∫–∞–∑–∞–Ω"}</span>
            {pet.category?.name && <span>{pet.category.name}</span>}
          </div>

          <div className="pet-price">{formatPrice(pet.price)}</div>

          <div className="pet-description">
            <h3>–û–ø–∏—Å–∞–Ω–∏–µ</h3>
            <p>{pet.description || "–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"}</p>
          </div>

          <div className="pet-actions">
            <button onClick={handleContact} className="btn btn-primary">
              üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –ø—Ä–æ–¥–∞–≤—Ü–æ–º
            </button>

            {pet.user_phone && (
              <a href={`tel:${pet.user_phone}`} className="btn btn-secondary">
                üì± {pet.user_phone}
              </a>
            )}

            {pet.user_email && (
              <a href={`mailto:${pet.user_email}`} className="btn btn-secondary">
                ‚úâÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å –ø—Ä–æ–¥–∞–≤—Ü—É
              </a>
            )}
          </div>

          <div className="pet-stats">
            <div>
              üëÅÔ∏è {pet.views_count || 0} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤
            </div>
            <div>
              üìÖ –†–∞–∑–º–µ—â–µ–Ω–æ:{" "}
              {new Date(pet.created_at).toLocaleDateString("ru-RU")}
            </div>
          </div>
        </div>
      </div>

      {/* –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" */}
      <div className="back-link">
        <Link to="/" className="btn btn-secondary">
          ‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–ø–∏—Å–∫—É
        </Link>
      </div>
    </div>
  );
}

export default PetDetail;
