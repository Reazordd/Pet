version: "3.9"

services:
  db:
    image: postgres:15
    container_name: pet-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: petuser
      POSTGRES_PASSWORD: 5v1234567
      POSTGRES_DB: petmarket
    ports:
      - "5432:5432"
    volumes:
      - pet-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U petuser -d petmarket"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s

  redis:
    image: redis:7-alpine
    container_name: pet-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: ["redis-server", "--appendonly", "yes"]

  backend:
    build:
      context: ./backend
    container_name: pet-backend
    restart: unless-stopped
    env_file:
      - ./backend/.env
    volumes:
      - ./backend:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    command:
      - sh
      - -c
      - |
        echo "üì¶ –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏ –∏ —Å–æ–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ç–∏–∫—É..."
        python manage.py collectstatic --noinput
        python manage.py migrate
        echo "üë§ –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è..."
        python manage.py shell -c "from django.contrib.auth import get_user_model; User = get_user_model(); User.objects.filter(username='admin').exists() or User.objects.create_superuser('admin','admin@example.com','admin123')"
        echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º Gunicorn..."
        gunicorn pet_project.wsgi:application --bind 0.0.0.0:8000

  frontend:
    build:
      context: ./frontend
    container_name: pet-frontend
    restart: unless-stopped
    ports:
      - "8080:80"
    depends_on:
      - backend

volumes:
  pet-db-data:
  static_volume:
  media_volume:
